#!/bin/bash
#BSUB -g LSF_g
#BSUB -G LSF_G
#BSUB -a 'docker(brookslab/flair:latest)'
#BSUB -J collapse[1-24]
#BSUB -q general
#BSUB -n 8
#BSUB -M 64G
#BSUB -W 600
#BSUB -R 'span[hosts=1]'
#BSUB -o LSF_LOG_PATH/collapse.%J.%I.out.txt
#BSUB -e LSF_LOG_PATH/collapse.%J.%I.err.txt

source LSF_SCRIPT_PATH/config.sh

# Make output directory
mkdir -p ${RESULTS_PATH}/collapse/chrom

# Run flair collapse on each chromsome
COUNTER=0
for CHROM_BED in ${RESULTS_PATH}/split/*.bed; do
    if [ -f "$CHROM_BED" ]; then
        if [ $((${COUNTER}%24)) == $((${LSB_JOBINDEX}-1)) ]; then
            CHROM=$(basename -- "$CHROM_BED")
            CHROM=${CHROM%.*}
            echo "Processing chromosome: " $CHROM
            # --stringent --isoformtss --no_gtf_end_adjustment --no_redundant longest  --filter nosubset --trust_ends
            flair collapse -g ${GENOME} --threads 8 --gtf ${RESULTS_PATH}/split/${CHROM}.gtf -q ${CHROM_BED} --output ${RESULTS_PATH}/collapse/chrom/${CHROM} -r ${RESULTS_PATH}/reads/combined.reads.gz --check_splice --generate_map --promoters ${PROMOTERS} --3prime_regions ${TES_UTRS}
        fi
        COUNTER=$[$COUNTER +1]
    fi
done

